%{
#include <stdio.h>
#include <math.h>
int yylex();
void yyerror(char *s);
%}
%start	BASE
%token	START END FLOATV INTEGER KARAKTER EGER DEGIL DONGU YAP
	PRINT VARIABLE DEGER DUM SAYI SAYIRASYONEL
	STRING YORUM FIRSTLOGIC SECONDLOGIC PA PK
	PLUS2 MINUS2 INU DC KE KED KBE KKE KB KK SPA SPK SART
	BIRLESTIRICI
	SC;
%%

BASE:		START LINES END {printf("OK\n"); return 0;} |
		START END {printf("OK\n"); return 0;} ;

LINES:	LINE | LINE LINES;

LINE:		DEF SC | ATAMA SC | LOGICAL | ARTIR SC | AZALT SC | YAZDIRKOMUT SC | YORUM;

YAZDIRKOMUT:	PRINT PA DEGER5 PK;

AZALT:		VARIABLE MINUS2;

ARTIR:		VARIABLE PLUS2;

DEF:	PA TUR PK DEGISKENLER;

TUR:		FLOATV | STRING | INTEGER | KARAKTER;

ATAMA:		VARIABLE INU DEGER1;

DEGER1:		DEGER1 FIRSTLOGIC DEGER2 | DEGER2;

DEGER2:		DEGER2 SECONDLOGIC DEGER3 | DEGER3;

DEGER3:		DEGER3 BIRLESTIRICI DEGER4 | DEGER4;

DEGER4:		PA DEGER1 PK | DEGER5;

DEGER5:		VARIABLE | SAYI | SAYIRASYONEL | DEGER;

LOGICAL:	EGER_ISLEMI | DONGU_ISLEMI;

EGER_ISLEMI:	EGER PA KOSUL PK SPA LINES SPK 
		| EGER PA KOSUL PK SPA LINES SPK DEGIL SPA LINES SPK;

DONGU_ISLEMI:	DONGU PA SAYI DC SAYI PK SPA LINES SPK
		| DONGU PA VARIABLE DC SAYI PK SPA LINES SPK
		| DONGU PA KOSUL PK SPA LINES SPK
		| YAP SPA LINES SPK DONGU PA KOSUL PK SC; 

KOSUL:		KOSUL_DEGER LOGICAL_ISLEM KOSUL_DEGER;

KOSUL_DEGER:	VARIABLE | SAYI | SAYIRASYONEL;

LOGICAL_ISLEM:KE | KED | KBE | KKE | KB | KK; 

DEGISKENLER:	VARIABLE | VARIABLE DEGISKENLER;

%%
#include "lex.yy.c"
void yyerror(char *s){
	printf ("%s\n", s);
}
int main(void){
	yyparse();
}
